/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class ppl_delite_cnative_DeliteNative */

#ifndef _Included_ppl_delite_cnative_DeliteNative
#define _Included_ppl_delite_cnative_DeliteNative
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     ppl_delite_cnative_DeliteNative
 * Method:    matrixMultDouble
 * Signature: ([D[D[DIII)V
 */
JNIEXPORT void JNICALL Java_ppl_delite_cnative_DeliteNative_matrixMultDouble
  (JNIEnv *, jclass, jdoubleArray, jdoubleArray, jdoubleArray, jint, jint, jint);

/*
 * Class:     ppl_delite_cnative_DeliteNative
 * Method:    matrixMultFloat
 * Signature: ([F[F[FIII)V
 */
JNIEXPORT void JNICALL Java_ppl_delite_cnative_DeliteNative_matrixMultFloat
  (JNIEnv *, jclass, jfloatArray, jfloatArray, jfloatArray, jint, jint, jint);

/*
 * Class:     ppl_delite_cnative_DeliteNative
 * Method:    vectMultFloat
 * Signature: ([F[F[FI)V
 */
JNIEXPORT void JNICALL Java_ppl_delite_cnative_DeliteNative_vectMultFloat
  (JNIEnv *, jclass, jfloatArray, jfloatArray, jfloatArray, jint);

/*
 * Class:     ppl_delite_cnative_DeliteNative
 * Method:    vectMultDouble
 * Signature: ([D[D[DI)V
 */
JNIEXPORT void JNICALL Java_ppl_delite_cnative_DeliteNative_vectMultDouble
  (JNIEnv *, jclass, jdoubleArray, jdoubleArray, jdoubleArray, jint);

/*
 * Class:     ppl_delite_cnative_DeliteNative
 * Method:    matVMultFloat
 * Signature: ([F[F[FIIII)V
 */
JNIEXPORT void JNICALL Java_ppl_delite_cnative_DeliteNative_matVMultFloat
  (JNIEnv *, jclass, jfloatArray, jfloatArray, jfloatArray, jint, jint, jint, jint);

/*
 * Class:     ppl_delite_cnative_DeliteNative
 * Method:    matVMultDouble
 * Signature: ([D[D[DIIII)V
 */
JNIEXPORT void JNICALL Java_ppl_delite_cnative_DeliteNative_matVMultDouble
  (JNIEnv *, jclass, jdoubleArray, jdoubleArray, jdoubleArray, jint, jint, jint, jint);

/*
 * Class:     ppl_delite_cnative_DeliteNative
 * Method:    vecExpFloat
 * Signature: ([F[FI)V
 */
JNIEXPORT void JNICALL Java_ppl_delite_cnative_DeliteNative_vecExpFloat
  (JNIEnv *, jclass, jfloatArray, jfloatArray, jint);

/*
 * Class:     ppl_delite_cnative_DeliteNative
 * Method:    vecExpDouble
 * Signature: ([D[DI)V
 */
JNIEXPORT void JNICALL Java_ppl_delite_cnative_DeliteNative_vecExpDouble
  (JNIEnv *, jclass, jdoubleArray, jdoubleArray, jint);

/*
 * Class:     ppl_delite_cnative_DeliteNative
 * Method:    vecSigmoidFloat
 * Signature: ([F[FII)V
 */
JNIEXPORT void JNICALL Java_ppl_delite_cnative_DeliteNative_vecSigmoidFloat
  (JNIEnv *, jclass, jfloatArray, jfloatArray, jint, jint);

/*
 * Class:     ppl_delite_cnative_DeliteNative
 * Method:    vecSigmoidDouble
 * Signature: ([D[DII)V
 */
JNIEXPORT void JNICALL Java_ppl_delite_cnative_DeliteNative_vecSigmoidDouble
  (JNIEnv *, jclass, jdoubleArray, jdoubleArray, jint, jint);

/*
 * Class:     ppl_delite_cnative_DeliteNative
 * Method:    vecRandFloat
 * Signature: ([FII)V
 */
JNIEXPORT void JNICALL Java_ppl_delite_cnative_DeliteNative_vecRandFloat
  (JNIEnv *, jclass, jfloatArray, jint, jint);

#ifdef __cplusplus
}
#endif
#endif
